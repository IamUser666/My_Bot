# Python 3.13.3 (tags/v3.13.3:6280bb5, Apr  8 2025, 14:47:33) [MSC v.1943 64 bit (AMD64)] on win32
Enter "help" below or click "Help" above for more information.
import random
import logging
import asyncio

from aiogram import Bot, Dispatcher, types, F
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, Message
from aiogram.enums import ContentType
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.filters import CommandStart

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

import os
API_TOKEN = os.getenv("BOT_TOKEN")  # –¢–æ–∫–µ–Ω –±–µ—Ä–µ—Ç—Å—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö Render
MY_USER_ID = int(os.getenv("MY_USER_ID"))  # ID —Ç–æ–∂–µ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=API_TOKEN)
dp = Dispatcher(storage=MemoryStorage())

# –°–ø–∏—Å–æ–∫ –≤–∏–¥–µ–æ: file_id –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –≤ Telegram –≤–∏–¥–µ–æ
VIDEOS = [
    "BAACAgIAAxkBAAEBQkRg5sV4p6LZg8kJ8r1D6s6k9h_9QgACPgADVp29Cksx2U1f8KXTSIE",
    "BAACAgIAAxkBAAEBQkVg5sV7X3f9TIyR6Fq4T8n9zX1LSwACQwADVp29Cn1aKZxH5qW7SIK",
    # –î–æ–±–∞–≤—å—Ç–µ —Å–≤–æ–∏ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã
]

# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
def get_keyboard() -> InlineKeyboardMarkup:
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="‚ñ∂Ô∏è –î–∞–ª—å—à–µ", callback_data="next"),
            InlineKeyboardButton(text="‚ù§Ô∏è –õ–∞–π–∫", callback_data="like")
        ]
    ])
    return keyboard

... # –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –≤–∏–¥–µ–æ
async def send_random_video(chat_id: int):
    video_id = random.choice(VIDEOS)
    await bot.send_video(
        chat_id=chat_id,
        video=video_id,
        caption="–ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –≤–∏–¥–µ–æ!",
        reply_markup=get_keyboard()
    )
... 
... # –ö–æ–º–∞–Ω–¥–∞ /start
... @dp.message(CommandStart())
... async def cmd_start(message: Message):
...     await message.answer(
...         "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–º–∏–Ω–∏-–¢–∏–∫–¢–æ–∫. –ù–∞–∂–º–∏ ‚ñ∂Ô∏è –î–∞–ª—å—à–µ, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ!",
...         reply_markup=get_keyboard()
...     )
... 
... # Callback –Ω–∞ –∫–Ω–æ–ø–∫–∏
... @dp.callback_query(F.data.in_({"next", "like"}))
... async def process_callback(callback_query: types.CallbackQuery):
...     if callback_query.data == "like":
...         await callback_query.answer("‚ù§Ô∏è –õ–∞–π–∫! –í–∏–¥–µ–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ.")
...     else:
...         await callback_query.answer()
...     await send_random_video(callback_query.from_user.id)
... 
... # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è file_id –æ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
... @dp.message(F.from_user.id == MY_USER_ID, F.content_type == ContentType.VIDEO)
... async def get_file_id(message: Message):
...     await message.reply(f"üìÇ file_id –≤–∞—à–µ–≥–æ –≤–∏–¥–µ–æ: `{message.video.file_id}`")
... 
... # –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞
... async def main():
...     try:
...         await dp.start_polling(bot)
...     finally:
...         await bot.session.close()
... 
... if __name__ == "__main__":
...     asyncio.run(main())
