import random
import logging
import asyncio
import os

from aiogram import Bot, Dispatcher, types, F
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, Message
from aiogram.enums import ContentType
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.filters import CommandStart

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

API_TOKEN = os.getenv("BOT_TOKEN")
MY_USER_ID = int(os.getenv("MY_USER_ID"))

bot = Bot(token=API_TOKEN)
dp = Dispatcher(storage=MemoryStorage())

# –°–ø–∏—Å–æ–∫ –≤–∏–¥–µ–æ: file_id –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –≤ Telegram –≤–∏–¥–µ–æ
VIDEOS = [
    "BAACAgIAAxkBAAEBQkRg5sV4p6LZg8kJ8r1D6s6k9h_9QgACPgADVp29Cksx2U1f8KXTSIE",
    "BAACAgIAAxkBAAEBQkVg5sV7X3f9TIyR6Fq4T8n9zX1LSwACQwADVp29Cn1aKZxH5qW7SIK",
]

def get_keyboard() -> InlineKeyboardMarkup:
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="‚ñ∂Ô∏è –î–∞–ª—å—à–µ", callback_data="next"),
            InlineKeyboardButton(text="‚ù§Ô∏è –õ–∞–π–∫", callback_data="like")
        ]
    ])
    return keyboard

async def send_random_video(chat_id: int):
    video_id = random.choice(VIDEOS)
    await bot.send_video(
        chat_id=chat_id,
        video=video_id,
        caption="–ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –≤–∏–¥–µ–æ!",
        reply_markup=get_keyboard()
    )
...
@dp.message(CommandStart())
async def cmd_start(message: Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–º–∏–Ω–∏-–¢–∏–∫–¢–æ–∫. –ù–∞–∂–º–∏ ‚ñ∂Ô∏è –î–∞–ª—å—à–µ, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ!",
        reply_markup=get_keyboard()
    )

@dp.callback_query(F.data.in_({"next", "like"}))
async def process_callback(callback_query: types.CallbackQuery):
    if callback_query.data == "like":
        await callback_query.answer("‚ù§Ô∏è –õ–∞–π–∫! –í–∏–¥–µ–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ.")
    else:
        await callback_query.answer()
    await send_random_video(callback_query.from_user.id)

@dp.message(F.from_user.id == MY_USER_ID, F.content_type == ContentType.VIDEO)
async def get_file_id(message: Message):
    if message.video:
        await message.reply(f"üìÇ file_id –≤–∞—à–µ–≥–æ –≤–∏–¥–µ–æ: `{message.video.file_id}`")

# –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π HTTP-—Å–µ—Ä–≤–µ—Ä
async def web_server():
    app = web.Application()
    app.router.add_get("/", lambda request: web.Response(text="Bot is running!"))
    runner = web.AppRunner(app)
    await runner.setup()
    port = int(os.getenv("PORT", 8000))  # –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é PORT
    site = web.TCPSite(runner, host="0.0.0.0", port=port)
    await site.start()
    return runner

async def main():
    http_runner = await web_server()
    try:
        await dp.start_polling(bot)
    finally:
        await bot.session.close()
        await http_runner.cleanup()

if __name__ == "__main__":
    asyncio.run(main())
